/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    'academic-programs': AcademicProgram;
    activities: Activity;
    staff: Staff;
    trips: Trip;
    media: Media;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    'academic-programs': AcademicProgramsSelect<false> | AcademicProgramsSelect<true>;
    activities: ActivitiesSelect<false> | ActivitiesSelect<true>;
    staff: StaffSelect<false> | StaffSelect<true>;
    trips: TripsSelect<false> | TripsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "academic-programs".
 */
export interface AcademicProgram {
  id: number;
  title: string;
  description: string;
  category: 'core-academic' | 'elective' | 'enrichment' | 'language' | 'stem' | 'arts-humanities';
  ageRange: string;
  duration: string;
  instructor?: (number | null) | Staff;
  prerequisites?:
    | {
        prerequisite?: string | null;
        id?: string | null;
      }[]
    | null;
  learningObjectives?:
    | {
        objective?: string | null;
        id?: string | null;
      }[]
    | null;
  materials?:
    | {
        material?: string | null;
        id?: string | null;
      }[]
    | null;
  schedule?: {
    days?: ('monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday')[] | null;
    time?: string | null;
    location?: string | null;
  };
  featuredImage?: (number | null) | Media;
  gallery?:
    | {
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  status?: ('active' | 'inactive' | 'draft') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "staff".
 */
export interface Staff {
  id: number;
  name: string;
  position: string;
  department: 'academic' | 'administration' | 'student-life' | 'support-services';
  bio: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  education?:
    | {
        degree?: string | null;
        institution?: string | null;
        year?: number | null;
        id?: string | null;
      }[]
    | null;
  experience?:
    | {
        position?: string | null;
        organization?: string | null;
        duration?: string | null;
        id?: string | null;
      }[]
    | null;
  specializations?:
    | {
        specialization?: string | null;
        id?: string | null;
      }[]
    | null;
  certifications?:
    | {
        certification?: string | null;
        issuingOrganization?: string | null;
        year?: number | null;
        id?: string | null;
      }[]
    | null;
  profileImage?: (number | null) | Media;
  email?: string | null;
  phone?: string | null;
  socialLinks?: {
    linkedin?: string | null;
    website?: string | null;
  };
  activities?:
    | {
        activity?: string | null;
        id?: string | null;
      }[]
    | null;
  status?: ('active' | 'inactive' | 'draft') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    hero?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "activities".
 */
export interface Activity {
  id: number;
  title: string;
  description: string;
  category:
    | 'sports-recreation'
    | 'arts-crafts'
    | 'music-dance'
    | 'technology'
    | 'outdoor-adventure'
    | 'social-activities';
  duration: string;
  schedule?: {
    days?: ('monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday')[] | null;
    time?: string | null;
    location?: string | null;
  };
  instructor?: string | null;
  maxParticipants?: number | null;
  equipment?:
    | {
        item?: string | null;
        id?: string | null;
      }[]
    | null;
  safety?:
    | {
        guideline?: string | null;
        id?: string | null;
      }[]
    | null;
  featuredImage?: (number | null) | Media;
  gallery?:
    | {
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  status?: ('active' | 'inactive' | 'draft') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trips".
 */
export interface Trip {
  id: number;
  title: string;
  description: string;
  category: 'university-visits' | 'cultural-experiences' | 'educational-tours' | 'recreational' | 'historical-sites';
  duration: string;
  destination: string;
  itinerary?:
    | {
        time?: string | null;
        activity?: string | null;
        description?: string | null;
        location?: string | null;
        id?: string | null;
      }[]
    | null;
  transportation?: string | null;
  cost?: number | null;
  maxParticipants?: number | null;
  requirements?:
    | {
        requirement?: string | null;
        id?: string | null;
      }[]
    | null;
  whatToBring?:
    | {
        item?: string | null;
        id?: string | null;
      }[]
    | null;
  safetyNotes?: string | null;
  featuredImage?: (number | null) | Media;
  gallery?:
    | {
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  status?: ('active' | 'inactive' | 'draft') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  role: 'admin' | 'editor';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'academic-programs';
        value: number | AcademicProgram;
      } | null)
    | ({
        relationTo: 'activities';
        value: number | Activity;
      } | null)
    | ({
        relationTo: 'staff';
        value: number | Staff;
      } | null)
    | ({
        relationTo: 'trips';
        value: number | Trip;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "academic-programs_select".
 */
export interface AcademicProgramsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  category?: T;
  ageRange?: T;
  duration?: T;
  instructor?: T;
  prerequisites?:
    | T
    | {
        prerequisite?: T;
        id?: T;
      };
  learningObjectives?:
    | T
    | {
        objective?: T;
        id?: T;
      };
  materials?:
    | T
    | {
        material?: T;
        id?: T;
      };
  schedule?:
    | T
    | {
        days?: T;
        time?: T;
        location?: T;
      };
  featuredImage?: T;
  gallery?:
    | T
    | {
        image?: T;
        id?: T;
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "activities_select".
 */
export interface ActivitiesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  category?: T;
  duration?: T;
  schedule?:
    | T
    | {
        days?: T;
        time?: T;
        location?: T;
      };
  instructor?: T;
  maxParticipants?: T;
  equipment?:
    | T
    | {
        item?: T;
        id?: T;
      };
  safety?:
    | T
    | {
        guideline?: T;
        id?: T;
      };
  featuredImage?: T;
  gallery?:
    | T
    | {
        image?: T;
        id?: T;
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "staff_select".
 */
export interface StaffSelect<T extends boolean = true> {
  name?: T;
  position?: T;
  department?: T;
  bio?: T;
  education?:
    | T
    | {
        degree?: T;
        institution?: T;
        year?: T;
        id?: T;
      };
  experience?:
    | T
    | {
        position?: T;
        organization?: T;
        duration?: T;
        id?: T;
      };
  specializations?:
    | T
    | {
        specialization?: T;
        id?: T;
      };
  certifications?:
    | T
    | {
        certification?: T;
        issuingOrganization?: T;
        year?: T;
        id?: T;
      };
  profileImage?: T;
  email?: T;
  phone?: T;
  socialLinks?:
    | T
    | {
        linkedin?: T;
        website?: T;
      };
  activities?:
    | T
    | {
        activity?: T;
        id?: T;
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trips_select".
 */
export interface TripsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  category?: T;
  duration?: T;
  destination?: T;
  itinerary?:
    | T
    | {
        time?: T;
        activity?: T;
        description?: T;
        location?: T;
        id?: T;
      };
  transportation?: T;
  cost?: T;
  maxParticipants?: T;
  requirements?:
    | T
    | {
        requirement?: T;
        id?: T;
      };
  whatToBring?:
    | T
    | {
        item?: T;
        id?: T;
      };
  safetyNotes?: T;
  featuredImage?: T;
  gallery?:
    | T
    | {
        image?: T;
        id?: T;
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        hero?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}